<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.charlie.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, birthday, sex, address
  </sql>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.User">
    insert into user (id, username, birthday, 
      sex, address)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{sex,jdbcType=CHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      sex = #{record.sex,jdbcType=CHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birth" jdbcType="INTEGER" property="birth" />
    <result column="telphone" jdbcType="CHAR" property="telphone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="depart" jdbcType="VARCHAR" property="depart" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="hiredate" jdbcType="INTEGER" property="hiredate" />
    <result column="db" jdbcType="VARCHAR" property="db" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="auth" jdbcType="VARCHAR" property="auth" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="last_login_ip" jdbcType="CHAR" property="lastLoginIp" />
    <result column="last_login_time" jdbcType="INTEGER" property="lastLoginTime" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="bornplace" jdbcType="VARCHAR" property="bornplace" />
    <result column="home" jdbcType="VARCHAR" property="home" />
    <result column="live" jdbcType="VARCHAR" property="live" />
    <result column="emegent" jdbcType="CHAR" property="emegent" />
    <result column="relation" jdbcType="CHAR" property="relation" />
    <result column="touch" jdbcType="CHAR" property="touch" />
    <result column="education" jdbcType="CHAR" property="education" />
    <result column="nature" jdbcType="VARCHAR" property="nature" />
    <result column="habit" jdbcType="VARCHAR" property="habit" />
    <result column="Positive_time" jdbcType="INTEGER" property="positiveTime" />
    <result column="post" jdbcType="CHAR" property="post" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.charlie.entity.UserWithBLOBs">
    <result column="resume" jdbcType="LONGVARCHAR" property="resume" />
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
    <result column="else" jdbcType="LONGVARCHAR" property="else" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, gender, birth, telphone, email, depart, level, hiredate, db, password, 
    auth, photo, last_login_ip, last_login_time, status, bornplace, home, live, emegent, 
    relation, touch, education, nature, habit, Positive_time, post
  </sql>
  <sql id="Blob_Column_List">
    resume, comment, else
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.charlie.entity.UserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.UserWithBLOBs">
    insert into user (id, name, gender, 
      birth, telphone, email, 
      depart, level, hiredate, 
      db, password, auth, photo, 
      last_login_ip, last_login_time, status, 
      bornplace, home, live, 
      emegent, relation, touch, education, 
      nature, habit, Positive_time, 
      post, resume, comment, 
      else)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{birth,jdbcType=INTEGER}, #{telphone,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{depart,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{hiredate,jdbcType=INTEGER}, 
      #{db,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, #{auth,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{lastLoginIp,jdbcType=CHAR}, #{lastLoginTime,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, 
      #{bornplace,jdbcType=VARCHAR}, #{home,jdbcType=VARCHAR}, #{live,jdbcType=VARCHAR}, 
      #{emegent,jdbcType=CHAR}, #{relation,jdbcType=CHAR}, #{touch,jdbcType=CHAR}, #{education,jdbcType=CHAR}, 
      #{nature,jdbcType=VARCHAR}, #{habit,jdbcType=VARCHAR}, #{positiveTime,jdbcType=INTEGER}, 
      #{post,jdbcType=CHAR}, #{resume,jdbcType=LONGVARCHAR}, #{comment,jdbcType=LONGVARCHAR}, 
      #{else,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.UserWithBLOBs">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="depart != null">
        depart,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="hiredate != null">
        hiredate,
      </if>
      <if test="db != null">
        db,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="auth != null">
        auth,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="bornplace != null">
        bornplace,
      </if>
      <if test="home != null">
        home,
      </if>
      <if test="live != null">
        live,
      </if>
      <if test="emegent != null">
        emegent,
      </if>
      <if test="relation != null">
        relation,
      </if>
      <if test="touch != null">
        touch,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="habit != null">
        habit,
      </if>
      <if test="positiveTime != null">
        Positive_time,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="resume != null">
        resume,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="else != null">
        else,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=INTEGER},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="depart != null">
        #{depart,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=INTEGER},
      </if>
      <if test="db != null">
        #{db,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=CHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="bornplace != null">
        #{bornplace,jdbcType=VARCHAR},
      </if>
      <if test="home != null">
        #{home,jdbcType=VARCHAR},
      </if>
      <if test="live != null">
        #{live,jdbcType=VARCHAR},
      </if>
      <if test="emegent != null">
        #{emegent,jdbcType=CHAR},
      </if>
      <if test="relation != null">
        #{relation,jdbcType=CHAR},
      </if>
      <if test="touch != null">
        #{touch,jdbcType=CHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=CHAR},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=VARCHAR},
      </if>
      <if test="habit != null">
        #{habit,jdbcType=VARCHAR},
      </if>
      <if test="positiveTime != null">
        #{positiveTime,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        #{post,jdbcType=CHAR},
      </if>
      <if test="resume != null">
        #{resume,jdbcType=LONGVARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="else != null">
        #{else,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=INTEGER},
      </if>
      <if test="record.telphone != null">
        telphone = #{record.telphone,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.depart != null">
        depart = #{record.depart,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredate != null">
        hiredate = #{record.hiredate,jdbcType=INTEGER},
      </if>
      <if test="record.db != null">
        db = #{record.db,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.auth != null">
        auth = #{record.auth,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=CHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.bornplace != null">
        bornplace = #{record.bornplace,jdbcType=VARCHAR},
      </if>
      <if test="record.home != null">
        home = #{record.home,jdbcType=VARCHAR},
      </if>
      <if test="record.live != null">
        live = #{record.live,jdbcType=VARCHAR},
      </if>
      <if test="record.emegent != null">
        emegent = #{record.emegent,jdbcType=CHAR},
      </if>
      <if test="record.relation != null">
        relation = #{record.relation,jdbcType=CHAR},
      </if>
      <if test="record.touch != null">
        touch = #{record.touch,jdbcType=CHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=CHAR},
      </if>
      <if test="record.nature != null">
        nature = #{record.nature,jdbcType=VARCHAR},
      </if>
      <if test="record.habit != null">
        habit = #{record.habit,jdbcType=VARCHAR},
      </if>
      <if test="record.positiveTime != null">
        Positive_time = #{record.positiveTime,jdbcType=INTEGER},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=CHAR},
      </if>
      <if test="record.resume != null">
        resume = #{record.resume,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.else != null">
        else = #{record.else,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      birth = #{record.birth,jdbcType=INTEGER},
      telphone = #{record.telphone,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      depart = #{record.depart,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      hiredate = #{record.hiredate,jdbcType=INTEGER},
      db = #{record.db,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      auth = #{record.auth,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      last_login_ip = #{record.lastLoginIp,jdbcType=CHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      bornplace = #{record.bornplace,jdbcType=VARCHAR},
      home = #{record.home,jdbcType=VARCHAR},
      live = #{record.live,jdbcType=VARCHAR},
      emegent = #{record.emegent,jdbcType=CHAR},
      relation = #{record.relation,jdbcType=CHAR},
      touch = #{record.touch,jdbcType=CHAR},
      education = #{record.education,jdbcType=CHAR},
      nature = #{record.nature,jdbcType=VARCHAR},
      habit = #{record.habit,jdbcType=VARCHAR},
      Positive_time = #{record.positiveTime,jdbcType=INTEGER},
      post = #{record.post,jdbcType=CHAR},
      resume = #{record.resume,jdbcType=LONGVARCHAR},
      comment = #{record.comment,jdbcType=LONGVARCHAR},
      else = #{record.else,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      birth = #{record.birth,jdbcType=INTEGER},
      telphone = #{record.telphone,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      depart = #{record.depart,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      hiredate = #{record.hiredate,jdbcType=INTEGER},
      db = #{record.db,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      auth = #{record.auth,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      last_login_ip = #{record.lastLoginIp,jdbcType=CHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      bornplace = #{record.bornplace,jdbcType=VARCHAR},
      home = #{record.home,jdbcType=VARCHAR},
      live = #{record.live,jdbcType=VARCHAR},
      emegent = #{record.emegent,jdbcType=CHAR},
      relation = #{record.relation,jdbcType=CHAR},
      touch = #{record.touch,jdbcType=CHAR},
      education = #{record.education,jdbcType=CHAR},
      nature = #{record.nature,jdbcType=VARCHAR},
      habit = #{record.habit,jdbcType=VARCHAR},
      Positive_time = #{record.positiveTime,jdbcType=INTEGER},
      post = #{record.post,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, sex, birthday, address
  </sql>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.User">
    insert into user (id, username, sex, 
      birthday, address)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="com_id" jdbcType="INTEGER" property="comId" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="shop_code" jdbcType="VARCHAR" property="shopCode" />
    <result column="op_id" jdbcType="INTEGER" property="opId" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="modified" jdbcType="INTEGER" property="modified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, email, mobile, password, com_id, status, role_code, level, job_id, 
    shop_code, op_id, created, modified
  </sql>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.User">
    insert into user (id, username, email, 
      mobile, password, com_id, 
      status, role_code, level, 
      job_id, shop_code, op_id, 
      created, modified)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{comId,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR}, #{roleCode,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{jobId,jdbcType=INTEGER}, #{shopCode,jdbcType=VARCHAR}, #{opId,jdbcType=INTEGER}, 
      #{created,jdbcType=INTEGER}, #{modified,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="comId != null">
        com_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="shopCode != null">
        shop_code,
      </if>
      <if test="opId != null">
        op_id,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modified != null">
        modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="comId != null">
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="shopCode != null">
        #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="opId != null">
        #{opId,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.comId != null">
        com_id = #{record.comId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.roleCode != null">
        role_code = #{record.roleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.shopCode != null">
        shop_code = #{record.shopCode,jdbcType=VARCHAR},
      </if>
      <if test="record.opId != null">
        op_id = #{record.opId,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      com_id = #{record.comId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      role_code = #{record.roleCode,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      job_id = #{record.jobId,jdbcType=INTEGER},
      shop_code = #{record.shopCode,jdbcType=VARCHAR},
      op_id = #{record.opId,jdbcType=INTEGER},
      created = #{record.created,jdbcType=INTEGER},
      modified = #{record.modified,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="created_at" jdbcType="INTEGER" property="createdAt" />
    <result column="updated_at" jdbcType="INTEGER" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nick_name, name, age, sex, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.User">
    insert into user (id, nick_name, name, 
      age, sex, created_at, 
      updated_at)
    values (#{id,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{age,jdbcType=TINYINT}, #{sex,jdbcType=TINYINT}, #{createdAt,jdbcType=INTEGER}, 
      #{updatedAt,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=TINYINT},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=TINYINT},
      sex = #{record.sex,jdbcType=TINYINT},
      created_at = #{record.createdAt,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birth" jdbcType="INTEGER" property="birth" />
    <result column="telphone" jdbcType="CHAR" property="telphone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="depart" jdbcType="VARCHAR" property="depart" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="hiredate" jdbcType="INTEGER" property="hiredate" />
    <result column="db" jdbcType="VARCHAR" property="db" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="auth" jdbcType="VARCHAR" property="auth" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="last_login_ip" jdbcType="CHAR" property="lastLoginIp" />
    <result column="last_login_time" jdbcType="INTEGER" property="lastLoginTime" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="bornplace" jdbcType="VARCHAR" property="bornplace" />
    <result column="home" jdbcType="VARCHAR" property="home" />
    <result column="live" jdbcType="VARCHAR" property="live" />
    <result column="emegent" jdbcType="CHAR" property="emegent" />
    <result column="relation" jdbcType="CHAR" property="relation" />
    <result column="touch" jdbcType="CHAR" property="touch" />
    <result column="education" jdbcType="CHAR" property="education" />
    <result column="nature" jdbcType="VARCHAR" property="nature" />
    <result column="habit" jdbcType="VARCHAR" property="habit" />
    <result column="Positive_time" jdbcType="INTEGER" property="positiveTime" />
    <result column="post" jdbcType="CHAR" property="post" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.charlie.entity.UserWithBLOBs">
    <result column="resume" jdbcType="LONGVARCHAR" property="resume" />
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
    <result column="else" jdbcType="LONGVARCHAR" property="else" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, gender, birth, telphone, email, depart, level, hiredate, db, password, 
    auth, photo, last_login_ip, last_login_time, status, bornplace, home, live, emegent, 
    relation, touch, education, nature, habit, Positive_time, post
  </sql>
  <sql id="Blob_Column_List">
    resume, comment, else
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.charlie.entity.UserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.UserWithBLOBs">
    insert into user (id, name, gender, 
      birth, telphone, email, 
      depart, level, hiredate, 
      db, password, auth, photo, 
      last_login_ip, last_login_time, status, 
      bornplace, home, live, 
      emegent, relation, touch, education, 
      nature, habit, Positive_time, 
      post, resume, comment, 
      else)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{birth,jdbcType=INTEGER}, #{telphone,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{depart,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{hiredate,jdbcType=INTEGER}, 
      #{db,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, #{auth,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{lastLoginIp,jdbcType=CHAR}, #{lastLoginTime,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, 
      #{bornplace,jdbcType=VARCHAR}, #{home,jdbcType=VARCHAR}, #{live,jdbcType=VARCHAR}, 
      #{emegent,jdbcType=CHAR}, #{relation,jdbcType=CHAR}, #{touch,jdbcType=CHAR}, #{education,jdbcType=CHAR}, 
      #{nature,jdbcType=VARCHAR}, #{habit,jdbcType=VARCHAR}, #{positiveTime,jdbcType=INTEGER}, 
      #{post,jdbcType=CHAR}, #{resume,jdbcType=LONGVARCHAR}, #{comment,jdbcType=LONGVARCHAR}, 
      #{else,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.UserWithBLOBs">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="depart != null">
        depart,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="hiredate != null">
        hiredate,
      </if>
      <if test="db != null">
        db,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="auth != null">
        auth,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="bornplace != null">
        bornplace,
      </if>
      <if test="home != null">
        home,
      </if>
      <if test="live != null">
        live,
      </if>
      <if test="emegent != null">
        emegent,
      </if>
      <if test="relation != null">
        relation,
      </if>
      <if test="touch != null">
        touch,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="habit != null">
        habit,
      </if>
      <if test="positiveTime != null">
        Positive_time,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="resume != null">
        resume,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="else != null">
        else,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=INTEGER},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="depart != null">
        #{depart,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null">
        #{hiredate,jdbcType=INTEGER},
      </if>
      <if test="db != null">
        #{db,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=CHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="bornplace != null">
        #{bornplace,jdbcType=VARCHAR},
      </if>
      <if test="home != null">
        #{home,jdbcType=VARCHAR},
      </if>
      <if test="live != null">
        #{live,jdbcType=VARCHAR},
      </if>
      <if test="emegent != null">
        #{emegent,jdbcType=CHAR},
      </if>
      <if test="relation != null">
        #{relation,jdbcType=CHAR},
      </if>
      <if test="touch != null">
        #{touch,jdbcType=CHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=CHAR},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=VARCHAR},
      </if>
      <if test="habit != null">
        #{habit,jdbcType=VARCHAR},
      </if>
      <if test="positiveTime != null">
        #{positiveTime,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        #{post,jdbcType=CHAR},
      </if>
      <if test="resume != null">
        #{resume,jdbcType=LONGVARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="else != null">
        #{else,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=INTEGER},
      </if>
      <if test="record.telphone != null">
        telphone = #{record.telphone,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.depart != null">
        depart = #{record.depart,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredate != null">
        hiredate = #{record.hiredate,jdbcType=INTEGER},
      </if>
      <if test="record.db != null">
        db = #{record.db,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.auth != null">
        auth = #{record.auth,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=CHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.bornplace != null">
        bornplace = #{record.bornplace,jdbcType=VARCHAR},
      </if>
      <if test="record.home != null">
        home = #{record.home,jdbcType=VARCHAR},
      </if>
      <if test="record.live != null">
        live = #{record.live,jdbcType=VARCHAR},
      </if>
      <if test="record.emegent != null">
        emegent = #{record.emegent,jdbcType=CHAR},
      </if>
      <if test="record.relation != null">
        relation = #{record.relation,jdbcType=CHAR},
      </if>
      <if test="record.touch != null">
        touch = #{record.touch,jdbcType=CHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=CHAR},
      </if>
      <if test="record.nature != null">
        nature = #{record.nature,jdbcType=VARCHAR},
      </if>
      <if test="record.habit != null">
        habit = #{record.habit,jdbcType=VARCHAR},
      </if>
      <if test="record.positiveTime != null">
        Positive_time = #{record.positiveTime,jdbcType=INTEGER},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=CHAR},
      </if>
      <if test="record.resume != null">
        resume = #{record.resume,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.else != null">
        else = #{record.else,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      birth = #{record.birth,jdbcType=INTEGER},
      telphone = #{record.telphone,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      depart = #{record.depart,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      hiredate = #{record.hiredate,jdbcType=INTEGER},
      db = #{record.db,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      auth = #{record.auth,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      last_login_ip = #{record.lastLoginIp,jdbcType=CHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      bornplace = #{record.bornplace,jdbcType=VARCHAR},
      home = #{record.home,jdbcType=VARCHAR},
      live = #{record.live,jdbcType=VARCHAR},
      emegent = #{record.emegent,jdbcType=CHAR},
      relation = #{record.relation,jdbcType=CHAR},
      touch = #{record.touch,jdbcType=CHAR},
      education = #{record.education,jdbcType=CHAR},
      nature = #{record.nature,jdbcType=VARCHAR},
      habit = #{record.habit,jdbcType=VARCHAR},
      Positive_time = #{record.positiveTime,jdbcType=INTEGER},
      post = #{record.post,jdbcType=CHAR},
      resume = #{record.resume,jdbcType=LONGVARCHAR},
      comment = #{record.comment,jdbcType=LONGVARCHAR},
      else = #{record.else,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      birth = #{record.birth,jdbcType=INTEGER},
      telphone = #{record.telphone,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      depart = #{record.depart,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      hiredate = #{record.hiredate,jdbcType=INTEGER},
      db = #{record.db,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      auth = #{record.auth,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      last_login_ip = #{record.lastLoginIp,jdbcType=CHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      bornplace = #{record.bornplace,jdbcType=VARCHAR},
      home = #{record.home,jdbcType=VARCHAR},
      live = #{record.live,jdbcType=VARCHAR},
      emegent = #{record.emegent,jdbcType=CHAR},
      relation = #{record.relation,jdbcType=CHAR},
      touch = #{record.touch,jdbcType=CHAR},
      education = #{record.education,jdbcType=CHAR},
      nature = #{record.nature,jdbcType=VARCHAR},
      habit = #{record.habit,jdbcType=VARCHAR},
      Positive_time = #{record.positiveTime,jdbcType=INTEGER},
      post = #{record.post,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="Host" jdbcType="CHAR" property="host" />
    <result column="User" jdbcType="CHAR" property="user" />
    <result column="Password" jdbcType="CHAR" property="password" />
    <result column="Select_priv" jdbcType="CHAR" property="selectPriv" />
    <result column="Insert_priv" jdbcType="CHAR" property="insertPriv" />
    <result column="Update_priv" jdbcType="CHAR" property="updatePriv" />
    <result column="Delete_priv" jdbcType="CHAR" property="deletePriv" />
    <result column="Create_priv" jdbcType="CHAR" property="createPriv" />
    <result column="Drop_priv" jdbcType="CHAR" property="dropPriv" />
    <result column="Reload_priv" jdbcType="CHAR" property="reloadPriv" />
    <result column="Shutdown_priv" jdbcType="CHAR" property="shutdownPriv" />
    <result column="Process_priv" jdbcType="CHAR" property="processPriv" />
    <result column="File_priv" jdbcType="CHAR" property="filePriv" />
    <result column="Grant_priv" jdbcType="CHAR" property="grantPriv" />
    <result column="References_priv" jdbcType="CHAR" property="referencesPriv" />
    <result column="Index_priv" jdbcType="CHAR" property="indexPriv" />
    <result column="Alter_priv" jdbcType="CHAR" property="alterPriv" />
    <result column="Show_db_priv" jdbcType="CHAR" property="showDbPriv" />
    <result column="Super_priv" jdbcType="CHAR" property="superPriv" />
    <result column="Create_tmp_table_priv" jdbcType="CHAR" property="createTmpTablePriv" />
    <result column="Lock_tables_priv" jdbcType="CHAR" property="lockTablesPriv" />
    <result column="Execute_priv" jdbcType="CHAR" property="executePriv" />
    <result column="Repl_slave_priv" jdbcType="CHAR" property="replSlavePriv" />
    <result column="Repl_client_priv" jdbcType="CHAR" property="replClientPriv" />
    <result column="Create_view_priv" jdbcType="CHAR" property="createViewPriv" />
    <result column="Show_view_priv" jdbcType="CHAR" property="showViewPriv" />
    <result column="Create_routine_priv" jdbcType="CHAR" property="createRoutinePriv" />
    <result column="Alter_routine_priv" jdbcType="CHAR" property="alterRoutinePriv" />
    <result column="Create_user_priv" jdbcType="CHAR" property="createUserPriv" />
    <result column="Event_priv" jdbcType="CHAR" property="eventPriv" />
    <result column="Trigger_priv" jdbcType="CHAR" property="triggerPriv" />
    <result column="Create_tablespace_priv" jdbcType="CHAR" property="createTablespacePriv" />
    <result column="ssl_type" jdbcType="CHAR" property="sslType" />
    <result column="max_questions" jdbcType="INTEGER" property="maxQuestions" />
    <result column="max_updates" jdbcType="INTEGER" property="maxUpdates" />
    <result column="max_connections" jdbcType="INTEGER" property="maxConnections" />
    <result column="max_user_connections" jdbcType="INTEGER" property="maxUserConnections" />
    <result column="plugin" jdbcType="CHAR" property="plugin" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.charlie.entity.UserWithBLOBs">
    <result column="ssl_cipher" jdbcType="LONGVARBINARY" property="sslCipher" />
    <result column="x509_issuer" jdbcType="LONGVARBINARY" property="x509Issuer" />
    <result column="x509_subject" jdbcType="LONGVARBINARY" property="x509Subject" />
    <result column="authentication_string" jdbcType="LONGVARCHAR" property="authenticationString" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Host, User, Password, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, 
    Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, 
    Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, 
    Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, Show_view_priv, 
    Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, Trigger_priv, 
    Create_tablespace_priv, ssl_type, max_questions, max_updates, max_connections, max_user_connections, 
    plugin
  </sql>
  <sql id="Blob_Column_List">
    ssl_cipher, x509_issuer, x509_subject, authentication_string
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.charlie.entity.UserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.UserWithBLOBs">
    insert into user (Host, User, Password, 
      Select_priv, Insert_priv, Update_priv, 
      Delete_priv, Create_priv, Drop_priv, 
      Reload_priv, Shutdown_priv, Process_priv, 
      File_priv, Grant_priv, References_priv, 
      Index_priv, Alter_priv, Show_db_priv, 
      Super_priv, Create_tmp_table_priv, Lock_tables_priv, 
      Execute_priv, Repl_slave_priv, Repl_client_priv, 
      Create_view_priv, Show_view_priv, Create_routine_priv, 
      Alter_routine_priv, Create_user_priv, Event_priv, 
      Trigger_priv, Create_tablespace_priv, ssl_type, 
      max_questions, max_updates, max_connections, 
      max_user_connections, plugin, ssl_cipher, 
      x509_issuer, x509_subject, authentication_string
      )
    values (#{host,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 
      #{selectPriv,jdbcType=CHAR}, #{insertPriv,jdbcType=CHAR}, #{updatePriv,jdbcType=CHAR}, 
      #{deletePriv,jdbcType=CHAR}, #{createPriv,jdbcType=CHAR}, #{dropPriv,jdbcType=CHAR}, 
      #{reloadPriv,jdbcType=CHAR}, #{shutdownPriv,jdbcType=CHAR}, #{processPriv,jdbcType=CHAR}, 
      #{filePriv,jdbcType=CHAR}, #{grantPriv,jdbcType=CHAR}, #{referencesPriv,jdbcType=CHAR}, 
      #{indexPriv,jdbcType=CHAR}, #{alterPriv,jdbcType=CHAR}, #{showDbPriv,jdbcType=CHAR}, 
      #{superPriv,jdbcType=CHAR}, #{createTmpTablePriv,jdbcType=CHAR}, #{lockTablesPriv,jdbcType=CHAR}, 
      #{executePriv,jdbcType=CHAR}, #{replSlavePriv,jdbcType=CHAR}, #{replClientPriv,jdbcType=CHAR}, 
      #{createViewPriv,jdbcType=CHAR}, #{showViewPriv,jdbcType=CHAR}, #{createRoutinePriv,jdbcType=CHAR}, 
      #{alterRoutinePriv,jdbcType=CHAR}, #{createUserPriv,jdbcType=CHAR}, #{eventPriv,jdbcType=CHAR}, 
      #{triggerPriv,jdbcType=CHAR}, #{createTablespacePriv,jdbcType=CHAR}, #{sslType,jdbcType=CHAR}, 
      #{maxQuestions,jdbcType=INTEGER}, #{maxUpdates,jdbcType=INTEGER}, #{maxConnections,jdbcType=INTEGER}, 
      #{maxUserConnections,jdbcType=INTEGER}, #{plugin,jdbcType=CHAR}, #{sslCipher,jdbcType=LONGVARBINARY}, 
      #{x509Issuer,jdbcType=LONGVARBINARY}, #{x509Subject,jdbcType=LONGVARBINARY}, #{authenticationString,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.UserWithBLOBs">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="host != null">
        Host,
      </if>
      <if test="user != null">
        User,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="selectPriv != null">
        Select_priv,
      </if>
      <if test="insertPriv != null">
        Insert_priv,
      </if>
      <if test="updatePriv != null">
        Update_priv,
      </if>
      <if test="deletePriv != null">
        Delete_priv,
      </if>
      <if test="createPriv != null">
        Create_priv,
      </if>
      <if test="dropPriv != null">
        Drop_priv,
      </if>
      <if test="reloadPriv != null">
        Reload_priv,
      </if>
      <if test="shutdownPriv != null">
        Shutdown_priv,
      </if>
      <if test="processPriv != null">
        Process_priv,
      </if>
      <if test="filePriv != null">
        File_priv,
      </if>
      <if test="grantPriv != null">
        Grant_priv,
      </if>
      <if test="referencesPriv != null">
        References_priv,
      </if>
      <if test="indexPriv != null">
        Index_priv,
      </if>
      <if test="alterPriv != null">
        Alter_priv,
      </if>
      <if test="showDbPriv != null">
        Show_db_priv,
      </if>
      <if test="superPriv != null">
        Super_priv,
      </if>
      <if test="createTmpTablePriv != null">
        Create_tmp_table_priv,
      </if>
      <if test="lockTablesPriv != null">
        Lock_tables_priv,
      </if>
      <if test="executePriv != null">
        Execute_priv,
      </if>
      <if test="replSlavePriv != null">
        Repl_slave_priv,
      </if>
      <if test="replClientPriv != null">
        Repl_client_priv,
      </if>
      <if test="createViewPriv != null">
        Create_view_priv,
      </if>
      <if test="showViewPriv != null">
        Show_view_priv,
      </if>
      <if test="createRoutinePriv != null">
        Create_routine_priv,
      </if>
      <if test="alterRoutinePriv != null">
        Alter_routine_priv,
      </if>
      <if test="createUserPriv != null">
        Create_user_priv,
      </if>
      <if test="eventPriv != null">
        Event_priv,
      </if>
      <if test="triggerPriv != null">
        Trigger_priv,
      </if>
      <if test="createTablespacePriv != null">
        Create_tablespace_priv,
      </if>
      <if test="sslType != null">
        ssl_type,
      </if>
      <if test="maxQuestions != null">
        max_questions,
      </if>
      <if test="maxUpdates != null">
        max_updates,
      </if>
      <if test="maxConnections != null">
        max_connections,
      </if>
      <if test="maxUserConnections != null">
        max_user_connections,
      </if>
      <if test="plugin != null">
        plugin,
      </if>
      <if test="sslCipher != null">
        ssl_cipher,
      </if>
      <if test="x509Issuer != null">
        x509_issuer,
      </if>
      <if test="x509Subject != null">
        x509_subject,
      </if>
      <if test="authenticationString != null">
        authentication_string,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="host != null">
        #{host,jdbcType=CHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="selectPriv != null">
        #{selectPriv,jdbcType=CHAR},
      </if>
      <if test="insertPriv != null">
        #{insertPriv,jdbcType=CHAR},
      </if>
      <if test="updatePriv != null">
        #{updatePriv,jdbcType=CHAR},
      </if>
      <if test="deletePriv != null">
        #{deletePriv,jdbcType=CHAR},
      </if>
      <if test="createPriv != null">
        #{createPriv,jdbcType=CHAR},
      </if>
      <if test="dropPriv != null">
        #{dropPriv,jdbcType=CHAR},
      </if>
      <if test="reloadPriv != null">
        #{reloadPriv,jdbcType=CHAR},
      </if>
      <if test="shutdownPriv != null">
        #{shutdownPriv,jdbcType=CHAR},
      </if>
      <if test="processPriv != null">
        #{processPriv,jdbcType=CHAR},
      </if>
      <if test="filePriv != null">
        #{filePriv,jdbcType=CHAR},
      </if>
      <if test="grantPriv != null">
        #{grantPriv,jdbcType=CHAR},
      </if>
      <if test="referencesPriv != null">
        #{referencesPriv,jdbcType=CHAR},
      </if>
      <if test="indexPriv != null">
        #{indexPriv,jdbcType=CHAR},
      </if>
      <if test="alterPriv != null">
        #{alterPriv,jdbcType=CHAR},
      </if>
      <if test="showDbPriv != null">
        #{showDbPriv,jdbcType=CHAR},
      </if>
      <if test="superPriv != null">
        #{superPriv,jdbcType=CHAR},
      </if>
      <if test="createTmpTablePriv != null">
        #{createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="lockTablesPriv != null">
        #{lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="executePriv != null">
        #{executePriv,jdbcType=CHAR},
      </if>
      <if test="replSlavePriv != null">
        #{replSlavePriv,jdbcType=CHAR},
      </if>
      <if test="replClientPriv != null">
        #{replClientPriv,jdbcType=CHAR},
      </if>
      <if test="createViewPriv != null">
        #{createViewPriv,jdbcType=CHAR},
      </if>
      <if test="showViewPriv != null">
        #{showViewPriv,jdbcType=CHAR},
      </if>
      <if test="createRoutinePriv != null">
        #{createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="alterRoutinePriv != null">
        #{alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="createUserPriv != null">
        #{createUserPriv,jdbcType=CHAR},
      </if>
      <if test="eventPriv != null">
        #{eventPriv,jdbcType=CHAR},
      </if>
      <if test="triggerPriv != null">
        #{triggerPriv,jdbcType=CHAR},
      </if>
      <if test="createTablespacePriv != null">
        #{createTablespacePriv,jdbcType=CHAR},
      </if>
      <if test="sslType != null">
        #{sslType,jdbcType=CHAR},
      </if>
      <if test="maxQuestions != null">
        #{maxQuestions,jdbcType=INTEGER},
      </if>
      <if test="maxUpdates != null">
        #{maxUpdates,jdbcType=INTEGER},
      </if>
      <if test="maxConnections != null">
        #{maxConnections,jdbcType=INTEGER},
      </if>
      <if test="maxUserConnections != null">
        #{maxUserConnections,jdbcType=INTEGER},
      </if>
      <if test="plugin != null">
        #{plugin,jdbcType=CHAR},
      </if>
      <if test="sslCipher != null">
        #{sslCipher,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Issuer != null">
        #{x509Issuer,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Subject != null">
        #{x509Subject,jdbcType=LONGVARBINARY},
      </if>
      <if test="authenticationString != null">
        #{authenticationString,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.host != null">
        Host = #{record.host,jdbcType=CHAR},
      </if>
      <if test="record.user != null">
        User = #{record.user,jdbcType=CHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.selectPriv != null">
        Select_priv = #{record.selectPriv,jdbcType=CHAR},
      </if>
      <if test="record.insertPriv != null">
        Insert_priv = #{record.insertPriv,jdbcType=CHAR},
      </if>
      <if test="record.updatePriv != null">
        Update_priv = #{record.updatePriv,jdbcType=CHAR},
      </if>
      <if test="record.deletePriv != null">
        Delete_priv = #{record.deletePriv,jdbcType=CHAR},
      </if>
      <if test="record.createPriv != null">
        Create_priv = #{record.createPriv,jdbcType=CHAR},
      </if>
      <if test="record.dropPriv != null">
        Drop_priv = #{record.dropPriv,jdbcType=CHAR},
      </if>
      <if test="record.reloadPriv != null">
        Reload_priv = #{record.reloadPriv,jdbcType=CHAR},
      </if>
      <if test="record.shutdownPriv != null">
        Shutdown_priv = #{record.shutdownPriv,jdbcType=CHAR},
      </if>
      <if test="record.processPriv != null">
        Process_priv = #{record.processPriv,jdbcType=CHAR},
      </if>
      <if test="record.filePriv != null">
        File_priv = #{record.filePriv,jdbcType=CHAR},
      </if>
      <if test="record.grantPriv != null">
        Grant_priv = #{record.grantPriv,jdbcType=CHAR},
      </if>
      <if test="record.referencesPriv != null">
        References_priv = #{record.referencesPriv,jdbcType=CHAR},
      </if>
      <if test="record.indexPriv != null">
        Index_priv = #{record.indexPriv,jdbcType=CHAR},
      </if>
      <if test="record.alterPriv != null">
        Alter_priv = #{record.alterPriv,jdbcType=CHAR},
      </if>
      <if test="record.showDbPriv != null">
        Show_db_priv = #{record.showDbPriv,jdbcType=CHAR},
      </if>
      <if test="record.superPriv != null">
        Super_priv = #{record.superPriv,jdbcType=CHAR},
      </if>
      <if test="record.createTmpTablePriv != null">
        Create_tmp_table_priv = #{record.createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="record.lockTablesPriv != null">
        Lock_tables_priv = #{record.lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="record.executePriv != null">
        Execute_priv = #{record.executePriv,jdbcType=CHAR},
      </if>
      <if test="record.replSlavePriv != null">
        Repl_slave_priv = #{record.replSlavePriv,jdbcType=CHAR},
      </if>
      <if test="record.replClientPriv != null">
        Repl_client_priv = #{record.replClientPriv,jdbcType=CHAR},
      </if>
      <if test="record.createViewPriv != null">
        Create_view_priv = #{record.createViewPriv,jdbcType=CHAR},
      </if>
      <if test="record.showViewPriv != null">
        Show_view_priv = #{record.showViewPriv,jdbcType=CHAR},
      </if>
      <if test="record.createRoutinePriv != null">
        Create_routine_priv = #{record.createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="record.alterRoutinePriv != null">
        Alter_routine_priv = #{record.alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="record.createUserPriv != null">
        Create_user_priv = #{record.createUserPriv,jdbcType=CHAR},
      </if>
      <if test="record.eventPriv != null">
        Event_priv = #{record.eventPriv,jdbcType=CHAR},
      </if>
      <if test="record.triggerPriv != null">
        Trigger_priv = #{record.triggerPriv,jdbcType=CHAR},
      </if>
      <if test="record.createTablespacePriv != null">
        Create_tablespace_priv = #{record.createTablespacePriv,jdbcType=CHAR},
      </if>
      <if test="record.sslType != null">
        ssl_type = #{record.sslType,jdbcType=CHAR},
      </if>
      <if test="record.maxQuestions != null">
        max_questions = #{record.maxQuestions,jdbcType=INTEGER},
      </if>
      <if test="record.maxUpdates != null">
        max_updates = #{record.maxUpdates,jdbcType=INTEGER},
      </if>
      <if test="record.maxConnections != null">
        max_connections = #{record.maxConnections,jdbcType=INTEGER},
      </if>
      <if test="record.maxUserConnections != null">
        max_user_connections = #{record.maxUserConnections,jdbcType=INTEGER},
      </if>
      <if test="record.plugin != null">
        plugin = #{record.plugin,jdbcType=CHAR},
      </if>
      <if test="record.sslCipher != null">
        ssl_cipher = #{record.sslCipher,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.x509Issuer != null">
        x509_issuer = #{record.x509Issuer,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.x509Subject != null">
        x509_subject = #{record.x509Subject,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.authenticationString != null">
        authentication_string = #{record.authenticationString,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user
    set Host = #{record.host,jdbcType=CHAR},
      User = #{record.user,jdbcType=CHAR},
      Password = #{record.password,jdbcType=CHAR},
      Select_priv = #{record.selectPriv,jdbcType=CHAR},
      Insert_priv = #{record.insertPriv,jdbcType=CHAR},
      Update_priv = #{record.updatePriv,jdbcType=CHAR},
      Delete_priv = #{record.deletePriv,jdbcType=CHAR},
      Create_priv = #{record.createPriv,jdbcType=CHAR},
      Drop_priv = #{record.dropPriv,jdbcType=CHAR},
      Reload_priv = #{record.reloadPriv,jdbcType=CHAR},
      Shutdown_priv = #{record.shutdownPriv,jdbcType=CHAR},
      Process_priv = #{record.processPriv,jdbcType=CHAR},
      File_priv = #{record.filePriv,jdbcType=CHAR},
      Grant_priv = #{record.grantPriv,jdbcType=CHAR},
      References_priv = #{record.referencesPriv,jdbcType=CHAR},
      Index_priv = #{record.indexPriv,jdbcType=CHAR},
      Alter_priv = #{record.alterPriv,jdbcType=CHAR},
      Show_db_priv = #{record.showDbPriv,jdbcType=CHAR},
      Super_priv = #{record.superPriv,jdbcType=CHAR},
      Create_tmp_table_priv = #{record.createTmpTablePriv,jdbcType=CHAR},
      Lock_tables_priv = #{record.lockTablesPriv,jdbcType=CHAR},
      Execute_priv = #{record.executePriv,jdbcType=CHAR},
      Repl_slave_priv = #{record.replSlavePriv,jdbcType=CHAR},
      Repl_client_priv = #{record.replClientPriv,jdbcType=CHAR},
      Create_view_priv = #{record.createViewPriv,jdbcType=CHAR},
      Show_view_priv = #{record.showViewPriv,jdbcType=CHAR},
      Create_routine_priv = #{record.createRoutinePriv,jdbcType=CHAR},
      Alter_routine_priv = #{record.alterRoutinePriv,jdbcType=CHAR},
      Create_user_priv = #{record.createUserPriv,jdbcType=CHAR},
      Event_priv = #{record.eventPriv,jdbcType=CHAR},
      Trigger_priv = #{record.triggerPriv,jdbcType=CHAR},
      Create_tablespace_priv = #{record.createTablespacePriv,jdbcType=CHAR},
      ssl_type = #{record.sslType,jdbcType=CHAR},
      max_questions = #{record.maxQuestions,jdbcType=INTEGER},
      max_updates = #{record.maxUpdates,jdbcType=INTEGER},
      max_connections = #{record.maxConnections,jdbcType=INTEGER},
      max_user_connections = #{record.maxUserConnections,jdbcType=INTEGER},
      plugin = #{record.plugin,jdbcType=CHAR},
      ssl_cipher = #{record.sslCipher,jdbcType=LONGVARBINARY},
      x509_issuer = #{record.x509Issuer,jdbcType=LONGVARBINARY},
      x509_subject = #{record.x509Subject,jdbcType=LONGVARBINARY},
      authentication_string = #{record.authenticationString,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set Host = #{record.host,jdbcType=CHAR},
      User = #{record.user,jdbcType=CHAR},
      Password = #{record.password,jdbcType=CHAR},
      Select_priv = #{record.selectPriv,jdbcType=CHAR},
      Insert_priv = #{record.insertPriv,jdbcType=CHAR},
      Update_priv = #{record.updatePriv,jdbcType=CHAR},
      Delete_priv = #{record.deletePriv,jdbcType=CHAR},
      Create_priv = #{record.createPriv,jdbcType=CHAR},
      Drop_priv = #{record.dropPriv,jdbcType=CHAR},
      Reload_priv = #{record.reloadPriv,jdbcType=CHAR},
      Shutdown_priv = #{record.shutdownPriv,jdbcType=CHAR},
      Process_priv = #{record.processPriv,jdbcType=CHAR},
      File_priv = #{record.filePriv,jdbcType=CHAR},
      Grant_priv = #{record.grantPriv,jdbcType=CHAR},
      References_priv = #{record.referencesPriv,jdbcType=CHAR},
      Index_priv = #{record.indexPriv,jdbcType=CHAR},
      Alter_priv = #{record.alterPriv,jdbcType=CHAR},
      Show_db_priv = #{record.showDbPriv,jdbcType=CHAR},
      Super_priv = #{record.superPriv,jdbcType=CHAR},
      Create_tmp_table_priv = #{record.createTmpTablePriv,jdbcType=CHAR},
      Lock_tables_priv = #{record.lockTablesPriv,jdbcType=CHAR},
      Execute_priv = #{record.executePriv,jdbcType=CHAR},
      Repl_slave_priv = #{record.replSlavePriv,jdbcType=CHAR},
      Repl_client_priv = #{record.replClientPriv,jdbcType=CHAR},
      Create_view_priv = #{record.createViewPriv,jdbcType=CHAR},
      Show_view_priv = #{record.showViewPriv,jdbcType=CHAR},
      Create_routine_priv = #{record.createRoutinePriv,jdbcType=CHAR},
      Alter_routine_priv = #{record.alterRoutinePriv,jdbcType=CHAR},
      Create_user_priv = #{record.createUserPriv,jdbcType=CHAR},
      Event_priv = #{record.eventPriv,jdbcType=CHAR},
      Trigger_priv = #{record.triggerPriv,jdbcType=CHAR},
      Create_tablespace_priv = #{record.createTablespacePriv,jdbcType=CHAR},
      ssl_type = #{record.sslType,jdbcType=CHAR},
      max_questions = #{record.maxQuestions,jdbcType=INTEGER},
      max_updates = #{record.maxUpdates,jdbcType=INTEGER},
      max_connections = #{record.maxConnections,jdbcType=INTEGER},
      max_user_connections = #{record.maxUserConnections,jdbcType=INTEGER},
      plugin = #{record.plugin,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="wh_id" jdbcType="INTEGER" property="whId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="login_field_num" jdbcType="TINYINT" property="loginFieldNum" />
    <result column="lock_time" jdbcType="INTEGER" property="lockTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="last_login_date" jdbcType="INTEGER" property="lastLoginDate" />
    <result column="created" jdbcType="INTEGER" property="created" />
    <result column="modified" jdbcType="INTEGER" property="modified" />
    <result column="auth" jdbcType="INTEGER" property="auth" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, email, wh_id, phone, nickname, status, login_field_num, lock_time, 
    last_login_ip, last_login_date, created, modified, auth
  </sql>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.User">
    insert into user (id, username, password, 
      email, wh_id, phone, 
      nickname, status, login_field_num, 
      lock_time, last_login_ip, last_login_date, 
      created, modified, auth
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{whId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{loginFieldNum,jdbcType=TINYINT}, 
      #{lockTime,jdbcType=INTEGER}, #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginDate,jdbcType=INTEGER}, 
      #{created,jdbcType=INTEGER}, #{modified,jdbcType=INTEGER}, #{auth,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="whId != null">
        wh_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="loginFieldNum != null">
        login_field_num,
      </if>
      <if test="lockTime != null">
        lock_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modified != null">
        modified,
      </if>
      <if test="auth != null">
        auth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="whId != null">
        #{whId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="loginFieldNum != null">
        #{loginFieldNum,jdbcType=TINYINT},
      </if>
      <if test="lockTime != null">
        #{lockTime,jdbcType=INTEGER},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=INTEGER},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.whId != null">
        wh_id = #{record.whId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.loginFieldNum != null">
        login_field_num = #{record.loginFieldNum,jdbcType=TINYINT},
      </if>
      <if test="record.lockTime != null">
        lock_time = #{record.lockTime,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginDate != null">
        last_login_date = #{record.lastLoginDate,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=INTEGER},
      </if>
      <if test="record.auth != null">
        auth = #{record.auth,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      wh_id = #{record.whId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      login_field_num = #{record.loginFieldNum,jdbcType=TINYINT},
      lock_time = #{record.lockTime,jdbcType=INTEGER},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      last_login_date = #{record.lastLoginDate,jdbcType=INTEGER},
      created = #{record.created,jdbcType=INTEGER},
      modified = #{record.modified,jdbcType=INTEGER},
      auth = #{record.auth,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.charlie.entity.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, birthday, sex, address
  </sql>
  <select id="selectByExample" parameterType="com.charlie.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.charlie.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charlie.entity.User">
    insert into user (id, username, birthday, 
      sex, address)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{sex,jdbcType=CHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.charlie.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charlie.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      sex = #{record.sex,jdbcType=CHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>